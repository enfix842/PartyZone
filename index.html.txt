import React, { useState, useEffect } from 'react';
import { User, Image, MapPin, PlusCircle, LogIn, Edit, Home, Bell, Sparkles } from 'lucide-react';

// Fiktiv brugerdata for at simulere en indlogget bruger
const dummyUser = {
  username: "FestgladBruger",
  bio: "Elsker gode fester og fed musik! F√∏lg med for updates.",
  profilePic: "https://placehold.co/150x150/FF6B6B/FFFFFF?text=PB",
  posts: [
    { id: 1, type: 'image', src: "https://placehold.co/300x200/4ECDC4/FFFFFF?text=Fest+billede+1", text: "Fantastisk aften i g√•r! #PartyZone #GoodVibes", likes: 15, comments: 3 },
    { id: 2, type: 'text', text: "Hvem er klar til weekenden? üéâ", likes: 8, comments: 1 }
  ],
  upcomingParties: [
    { id: 1, name: "Sommer Rave", date: "2025-07-10", time: "22:00", location: "K√∏benhavn" },
    { id: 2, name: "Havefest hos Mig", date: "2025-07-20", time: "19:00", location: "Odense" }
  ],
  followers: 120,
  following: 80
};

// Fiktiv festdata
const dummyParties = [
  { id: 1, name: "Sommer Rave", time: "22:00", address: "Strandvejen 1, 1234 K√∏benhavn", description: "En episk sommerrave med de bedste DJs!", type: "stor", lat: 55.6761, lng: 12.5683 }, // CPH
  { id: 2, name: "Havefest hos Mig", time: "19:00", address: "Havevej 10, 5000 Odense", description: "Privat fest med DJ og grill ‚Äì masser af plads!", type: "mellem", lat: 55.3959, lng: 10.3883 }, // Odense
  { id: 3, name: "K√¶lderparty", time: "20:00", address: "Vestergade 5, 8000 Aarhus", description: "Hyggeligt k√¶lderparty med br√¶tspil og drinks.", type: "lille", lat: 56.1629, lng: 10.2039 } // Aarhus
];

// Funktion til at simulere farve baseret p√• festtype
const getPartyColor = (type) => {
  switch (type) {
    case 'stor': return 'bg-red-500'; // R√∏d
    case 'mellem': return 'bg-yellow-500'; // Gul
    case 'lille': return 'bg-green-500'; // Gr√∏n
    default: return 'bg-gray-400';
  }
};

const Header = ({ onNavigate }) => {
  return (
    <header className="bg-gradient-to-r from-purple-600 to-pink-600 text-white p-4 shadow-lg rounded-b-xl flex justify-between items-center sticky top-0 z-10">
      <h1 className="text-3xl font-bold font-inter text-shadow">PartyZone</h1>
      <button
        onClick={() => onNavigate('login')}
        className="bg-white text-purple-600 px-4 py-2 rounded-full font-semibold hover:bg-gray-100 transition-all duration-300 shadow-md"
      >
        <LogIn size={20} className="inline-block mr-2" /> Log ind
      </button>
    </header>
  );
};

const Navigation = ({ onNavigate, currentPage }) => {
  const navItems = [
    { name: "Feed", icon: Home, page: "feed" },
    { name: "Kort", icon: MapPin, page: "map" },
    { name: "Opret Fest", icon: PlusCircle, page: "createParty" },
    { name: "Profil", icon: User, page: "profile" },
  ];

  return (
    <nav className="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 shadow-lg z-50 rounded-t-xl">
      <ul className="flex justify-around py-2">
        {navItems.map((item) => (
          <li key={item.name}>
            <button
              onClick={() => onNavigate(item.page)}
              className={`flex flex-col items-center p-2 text-sm font-medium transition-colors duration-200 ${
                currentPage === item.page ? 'text-purple-600' : 'text-gray-500 hover:text-purple-500'
              }`}
            >
              <item.icon size={24} />
              <span>{item.name}</span>
            </button>
          </li>
        ))}
      </ul>
    </nav>
  );
};

const LoginPage = ({ onLoginSuccess, onRegisterClick, onForgotPassword }) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [errorMessage, setErrorMessage] = useState('');

  const handleLogin = (e) => {
    e.preventDefault();
    if (username === 'test' && password === 'password') {
      onLoginSuccess();
    } else {
      setErrorMessage('Forkert brugernavn eller adgangskode.');
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-500 to-pink-500 p-4">
      <div className="bg-white p-8 rounded-2xl shadow-xl w-full max-w-md">
        <div className="text-center mb-6">
          <h2 className="text-4xl font-extrabold text-purple-700 mb-2 font-inter">PartyZone</h2>
          <p className="text-gray-600">Din portal til Danmarks fedeste fester!</p>
        </div>
        <form onSubmit={handleLogin} className="space-y-4">
          <div>
            <label htmlFor="username" className="block text-gray-700 font-medium mb-1">
              Brugernavn / E-mail
            </label>
            <input
              type="text"
              id="username"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200"
              placeholder="Indtast brugernavn eller e-mail"
              value={username}
              onChange={(e) => setUsername(e.target.value)}
              required
            />
          </div>
          <div>
            <label htmlFor="password" className="block text-gray-700 font-medium mb-1">
              Adgangskode
            </label>
            <input
              type="password"
              id="password"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200"
              placeholder="Indtast adgangskode"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />
          </div>
          {errorMessage && <p className="text-red-500 text-sm">{errorMessage}</p>}
          <button
            type="submit"
            className="w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white py-3 rounded-lg font-bold text-lg hover:from-purple-700 hover:to-pink-700 transition-all duration-300 shadow-md"
          >
            Log ind
          </button>
        </form>
        <div className="mt-6 text-center space-y-3">
          <button
            onClick={onRegisterClick}
            className="w-full bg-gray-200 text-gray-800 py-3 rounded-lg font-semibold hover:bg-gray-300 transition-all duration-300 shadow-sm"
          >
            Opret bruger
          </button>
          <button
            onClick={onForgotPassword}
            className="w-full text-purple-600 font-medium hover:underline text-sm"
          >
            Glemt adgangskode?
          </button>
        </div>
      </div>
    </div>
  );
};

const RegisterPage = ({ onBackToLogin }) => {
  const [username, setUsername] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleRegister = (e) => {
    e.preventDefault();
    // Simulering af brugeroprettelse
    // alert('Bruger oprettet! (Dette er en simulering)'); // Bruges kun til simulering, erstattes med modal i rigtig app
    onBackToLogin();
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-pink-500 to-purple-500 p-4">
      <div className="bg-white p-8 rounded-2xl shadow-xl w-full max-w-md">
        <div className="text-center mb-6">
          <h2 className="text-3xl font-extrabold text-purple-700 mb-2 font-inter">Opret Bruger</h2>
          <p className="text-gray-600">Bliv en del af PartyZone f√¶llesskabet!</p>
        </div>
        <form onSubmit={handleRegister} className="space-y-4">
          <div>
            <label htmlFor="regUsername" className="block text-gray-700 font-medium mb-1">
              Brugernavn
            </label>
            <input
              type="text"
              id="regUsername"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200"
              placeholder="V√¶lg et brugernavn"
              value={username}
              onChange={(e) => setUsername(e.target.value)}
              required
            />
          </div>
          <div>
            <label htmlFor="regEmail" className="block text-gray-700 font-medium mb-1">
              E-mail
            </label>
            <input
              type="email"
              id="regEmail"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200"
              placeholder="Indtast din e-mail"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
            />
          </div>
          <div>
            <label htmlFor="regPassword" className="block text-gray-700 font-medium mb-1">
              Adgangskode
            </label>
            <input
              type="password"
              id="regPassword"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200"
              placeholder="V√¶lg en adgangskode"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />
          </div>
          <button
            type="submit"
            className="w-full bg-gradient-to-r from-pink-600 to-purple-600 text-white py-3 rounded-lg font-bold text-lg hover:from-pink-700 hover:to-purple-700 transition-all duration-300 shadow-md"
          >
            Opret bruger
          </button>
        </form>
        <div className="mt-6 text-center">
          <button
            onClick={onBackToLogin}
            className="w-full text-purple-600 font-medium hover:underline text-sm"
          >
            Har du allerede en konto? Log ind
          </button>
        </div>
      </div>
    </div>
  );
};

const ProfilePage = ({ user, onEditProfile }) => {
  return (
    <div className="container mx-auto p-4 pt-20 pb-20 max-w-md"> {/* Added pt-20 and pb-20 for header/footer space */}
      <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
        <div className="flex flex-col items-center mb-6">
          <img
            src={user.profilePic}
            alt="Profilbillede"
            className="w-32 h-32 rounded-full object-cover border-4 border-purple-400 mb-4 shadow-md"
          />
          <h2 className="text-3xl font-bold text-gray-800 mb-1">{user.username}</h2>
          <p className="text-gray-600 text-center px-4">{user.bio}</p>
        </div>

        <div className="flex justify-around text-center mb-6">
          <div>
            <p className="text-xl font-bold text-gray-800">{user.followers}</p>
            <p className="text-gray-500">F√∏lgere</p>
          </div>
          <div>
            <p className="text-xl font-bold text-gray-800">{user.following}</p>
            <p className="text-gray-500">F√∏lger</p>
          </div>
        </div>

        <button
          onClick={onEditProfile}
          className="w-full bg-purple-500 text-white py-3 rounded-xl font-semibold hover:bg-purple-600 transition-all duration-300 shadow-md flex items-center justify-center"
        >
          <Edit size={20} className="inline-block mr-2" /> Rediger profil
        </button>
      </div>

      <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
        <h3 className="text-2xl font-bold text-gray-800 mb-4">Dine Opslag</h3>
        <div className="grid grid-cols-2 gap-4">
          {user.posts.map((post) => (
            <div key={post.id} className="relative bg-gray-100 rounded-lg overflow-hidden shadow-sm">
              {post.type === 'image' && (
                <img src={post.src} alt="Post billede" className="w-full h-32 object-cover" />
              )}
              {post.type === 'text' && (
                <div className="p-3 h-32 flex items-center justify-center text-center">
                  <p className="text-gray-700 text-sm font-medium">{post.text}</p>
                </div>
              )}
              <div className="absolute bottom-0 left-0 right-0 bg-black bg-opacity-40 text-white text-xs p-2 flex justify-between">
                <span>‚ù§Ô∏è {post.likes}</span>
                <span>üí¨ {post.comments}</span>
              </div>
            </div>
          ))}
          {user.posts.length === 0 && <p className="text-gray-500">Du har endnu ingen opslag.</p>}
        </div>
      </div>

      <div className="bg-white rounded-2xl shadow-lg p-6">
        <h3 className="text-2xl font-bold text-gray-800 mb-4">Dine Kommende Fester</h3>
        <div className="space-y-3">
          {user.upcomingParties.map((party) => (
            <div key={party.id} className="flex items-center p-3 bg-blue-50 rounded-lg shadow-sm">
              <Bell size={24} className="text-blue-500 mr-3 flex-shrink-0" />
              <div>
                <p className="font-semibold text-gray-800">{party.name}</p>
                <p className="text-sm text-gray-600">{party.date} kl. {party.time} i {party.location}</p>
              </div>
            </div>
          ))}
          {user.upcomingParties.length === 0 && <p className="text-gray-500">Du er ikke tilmeldt nogen kommende fester.</p>}
        </div>
      </div>
    </div>
  );
};

const FeedPage = ({ onCreatePost }) => {
  const posts = [
    {
      id: 1,
      user: 'AnnaJ',
      userPic: 'https://placehold.co/40x40/FFD1DC/FFFFFF?text=AJ',
      image: 'https://placehold.co/400x300/A0DAFB/FFFFFF?text=Feed+Billede+1',
      text: 'Fantastisk aften med de bedste folk! üéâ #PartyLife #Copenhagen',
      likes: 245,
      comments: 32,
      time: '2 timer siden'
    },
    {
      id: 2,
      user: 'MadsK',
      userPic: 'https://placehold.co/40x40/C4A7E0/FFFFFF?text=MK',
      text: 'Er der nogen gode fester i Aarhus i weekenden? Skriv endelig!',
      likes: 89,
      comments: 15,
      time: '5 timer siden'
    },
    {
      id: 3,
      user: 'SofieL',
      userPic: 'https://placehold.co/40x40/FFDCDC/FFFFFF?text=SL',
      image: 'https://placehold.co/400x300/BBE0A7/FFFFFF?text=Feed+Billede+2',
      text: 'Elsker viben her! Tak for en uforglemmelig nat ‚ú®',
      likes: 310,
      comments: 48,
      time: 'I g√•r'
    }
  ];

  return (
    <div className="container mx-auto p-4 pt-20 pb-20 max-w-md">
      <div className="flex justify-between items-center mb-6 bg-white p-4 rounded-xl shadow-sm sticky top-16 z-10"> {/* Adjusted top for header */}
        <h2 className="text-2xl font-bold text-gray-800">PartyZone Feed</h2>
        <button
          onClick={onCreatePost}
          className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-4 py-2 rounded-full font-semibold hover:from-purple-600 hover:to-pink-600 transition-all duration-300 shadow-md flex items-center"
        >
          <PlusCircle size={20} className="inline-block mr-2" /> Opret opslag
        </button>
      </div>

      <div className="mb-6 flex space-x-2 overflow-x-auto pb-2">
        <button className="bg-purple-100 text-purple-700 px-4 py-2 rounded-full text-sm font-medium hover:bg-purple-200 transition-colors">
          Fester i n√¶rheden
        </button>
        <button className="bg-gray-100 text-gray-700 px-4 py-2 rounded-full text-sm font-medium hover:bg-gray-200 transition-colors">
          Billeder fra i g√•r
        </button>
        <button className="bg-gray-100 text-gray-700 px-4 py-2 rounded-full text-sm font-medium hover:bg-gray-200 transition-colors">
          Seneste
        </button>
        <button className="bg-gray-100 text-gray-700 px-4 py-2 rounded-full text-sm font-medium hover:bg-gray-200 transition-colors">
          Popul√¶re
        </button>
      </div>

      <div className="space-y-6">
        {posts.map((post) => (
          <div key={post.id} className="bg-white rounded-2xl shadow-lg overflow-hidden">
            <div className="flex items-center p-4">
              <img src={post.userPic} alt={post.user} className="w-10 h-10 rounded-full mr-3 object-cover border-2 border-purple-300" />
              <div>
                <p className="font-semibold text-gray-800">{post.user}</p>
                <p className="text-xs text-gray-500">{post.time}</p>
              </div>
            </div>
            {post.image && (
              <img src={post.image} alt="Postbillede" className="w-full h-auto object-cover" />
            )}
            <div className="p-4">
              <p className="text-gray-700 mb-3">{post.text}</p>
              <div className="flex items-center text-gray-500 text-sm">
                <button className="flex items-center mr-4 hover:text-red-500 transition-colors">
                  <span className="text-lg mr-1">‚ù§Ô∏è</span> {post.likes}
                </button>
                <button className="flex items-center hover:text-blue-500 transition-colors">
                  <span className="text-lg mr-1">üí¨</span> {post.comments}
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

const MapPage = () => {
  const [showPartyDetails, setShowPartyDetails] = useState(null);

  const handlePartyClick = (party) => {
    setShowPartyDetails(party);
  };

  const handleCloseDetails = () => {
    setShowPartyDetails(null);
  };

  return (
    <div className="container mx-auto p-4 pt-20 pb-20 max-w-md relative">
      <h2 className="text-2xl font-bold text-gray-800 mb-6 sticky top-16 bg-white p-4 rounded-xl shadow-sm z-10">Kort over Fester</h2>
      <div className="bg-blue-200 rounded-2xl shadow-lg w-full h-96 flex items-center justify-center relative overflow-hidden">
        <p className="text-blue-800 text-lg font-semibold absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-70">
          Interaktivt Danmarkskort (Simuleret)
        </p>
        <img
          src="https://placehold.co/400x400/9EDCFF/2B4F67?text=Kort+over+Danmark"
          alt="Simuleret Danmarkskort"
          className="w-full h-full object-cover opacity-50"
        />

        {dummyParties.map((party) => (
          <div
            key={party.id}
            className={`absolute w-6 h-6 rounded-full flex items-center justify-center text-white font-bold text-xs cursor-pointer shadow-md transform -translate-x-1/2 -translate-y-1/2 ${getPartyColor(party.type)}`}
            style={{
              // These are arbitrary values for demonstration, not real geo-coordinates
              left: `${party.lat * 1.5 - 28}%`,
              top: `${party.lng * 1.5 - 200}%`
            }}
            onClick={() => handlePartyClick(party)}
          >
            {/* You could put an icon here if desired */}
          </div>
        ))}
      </div>

      {showPartyDetails && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-20">
          <div className="bg-white p-6 rounded-2xl shadow-xl w-full max-w-sm relative">
            <button
              onClick={handleCloseDetails}
              className="absolute top-3 right-3 text-gray-500 hover:text-gray-800 text-2xl font-bold"
            >
              &times;
            </button>
            <h3 className="text-2xl font-bold text-gray-800 mb-2">{showPartyDetails.name}</h3>
            <p className="text-gray-600 mb-1 flex items-center"><span className="mr-2">‚è∞</span> {showPartyDetails.time}</p>
            <p className="text-gray-600 mb-1 flex items-center"><span className="mr-2">üìç</span> {showPartyDetails.address}</p>
            <p className="text-gray-700 mb-4">{showPartyDetails.description}</p>
            <button className="w-full bg-gradient-to-r from-purple-500 to-pink-500 text-white py-3 rounded-lg font-bold hover:from-purple-600 hover:to-pink-600 transition-all duration-300 shadow-md">
              Tilmeld dig / L√¶s mere
            </button>
          </div>
        </div>
      )}

      <div className="mt-6 bg-white p-6 rounded-2xl shadow-lg">
        <h3 className="text-xl font-bold text-gray-800 mb-4">Festforklaring:</h3>
        <ul className="space-y-2">
          <li className="flex items-center">
            <span className="w-4 h-4 rounded-full bg-red-500 mr-3"></span>
            <span className="text-gray-700">Stor fest / Event</span>
          </li>
          <li className="flex items-center">
            <span className="w-4 h-4 rounded-full bg-yellow-500 mr-3"></span>
            <span className="text-gray-700">Mellem stor fest / Gathering</span>
          </li>
          <li className="flex items-center">
            <span className="w-4 h-4 rounded-full bg-green-500 mr-3"></span>
            <span className="text-gray-700">Lille fest / Privat arrangement</span>
          </li>
        </ul>
      </div>
    </div>
  );
};

const CreatePartyPage = ({ onCreatePartySuccess }) => {
  const [partyName, setPartyName] = useState('');
  const [address, setAddress] = useState('');
  const [date, setDate] = useState('');
  const [time, setTime] = useState('');
  const [description, setDescription] = useState('');
  const [participants, setParticipants] = useState('');
  const [image, setImage] = useState(null);
  const [imagePreview, setImagePreview] = useState('');
  const [isGenerating, setIsGenerating] = useState(false); // State for loading indicator

  const handleImageUpload = (e) => {
    const file = e.target.files[0];
    if (file) {
      setImage(file);
      setImagePreview(URL.createObjectURL(file));
    } else {
      setImage(null);
      setImagePreview('');
    }
  };

  const handleGenerateDescription = async () => {
    if (!partyName) {
      // alert("Please enter a party name first to generate a description."); // Replaced with modal in real app
      return;
    }

    setIsGenerating(true);
    let chatHistory = [];
    const prompt = `Generer en kort, f√¶ngende og festlig beskrivelse (max 100 ord) for en fest med navnet "${partyName}". Inkluder gerne detaljer som datoen: ${date}, tidspunktet: ${time}, og forventet antal deltagere: ${participants}. Skriv p√• dansk.`;
    chatHistory.push({ role: "user", parts: [{ text: prompt }] });

    const payload = { contents: chatHistory };
    const apiKey = ""; // Canvas will provide this
    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

    try {
      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      });
      const result = await response.json();

      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {
        const generatedText = result.candidates[0].content.parts[0].text;
        setDescription(generatedText);
      } else {
        console.error("Gemini API returned an unexpected response structure:", result);
        // alert("Kunne ikke generere beskrivelse. Pr√∏v igen."); // Replaced with modal
      }
    } catch (error) {
      console.error("Error calling Gemini API:", error);
      // alert("Der opstod en fejl ved generering af beskrivelse."); // Replaced with modal
    } finally {
      setIsGenerating(false);
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Simulate party creation
    console.log({ partyName, address, date, time, description, participants, image });
    // alert('Fest oprettet! (Dette er en simulering)'); // Bruges kun til simulering, erstattes med modal i rigtig app
    onCreatePartySuccess();
  };

  return (
    <div className="container mx-auto p-4 pt-20 pb-20 max-w-md">
      <h2 className="text-2xl font-bold text-gray-800 mb-6 sticky top-16 bg-white p-4 rounded-xl shadow-sm z-10">Opret Ny Fest</h2>
      <div className="bg-white p-8 rounded-2xl shadow-lg">
        <form onSubmit={handleSubmit} className="space-y-5">
          <div>
            <label htmlFor="partyName" className="block text-gray-700 font-medium mb-1">
              Festens navn
            </label>
            <input
              type="text"
              id="partyName"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent"
              placeholder="F.eks. Sommerfest 2025"
              value={partyName}
              onChange={(e) => setPartyName(e.target.value)}
              required
            />
          </div>

          <div>
            <label htmlFor="address" className="block text-gray-700 font-medium mb-1">
              Adresse
            </label>
            <input
              type="text"
              id="address"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent"
              placeholder="F.eks. Gadevej 1, 1234 By"
              value={address}
              onChange={(e) => setAddress(e.target.value)}
              required
            />
          </div>

          <div className="flex space-x-4">
            <div className="flex-1">
              <label htmlFor="date" className="block text-gray-700 font-medium mb-1">
                Dato
              </label>
              <input
                type="date"
                id="date"
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent"
                value={date}
                onChange={(e) => setDate(e.target.value)}
                required
              />
            </div>
            <div className="flex-1">
              <label htmlFor="time" className="block text-gray-700 font-medium mb-1">
                Tidspunkt
              </label>
              <input
                type="time"
                id="time"
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent"
                value={time}
                onChange={(e) => setTime(e.target.value)}
                required
              />
            </div>
          </div>

          <div>
            <label htmlFor="description" className="block text-gray-700 font-medium mb-1">
              Beskrivelse
            </label>
            <textarea
              id="description"
              rows="4"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent"
              placeholder="Fort√¶l mere om festen..."
              value={description}
              onChange={(e) => setDescription(e.target.value)}
              required
            ></textarea>
            <button
              type="button"
              onClick={handleGenerateDescription}
              disabled={isGenerating}
              className={`mt-2 w-full flex items-center justify-center py-2 px-4 rounded-lg font-semibold text-sm transition-all duration-300 ${
                isGenerating
                  ? 'bg-gray-300 text-gray-600 cursor-not-allowed'
                  : 'bg-gradient-to-r from-teal-400 to-blue-500 text-white hover:from-teal-500 hover:to-blue-600 shadow-md'
              }`}
            >
              {isGenerating ? (
                <>
                  <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  Genererer...
                </>
              ) : (
                <>
                  <Sparkles size={20} className="inline-block mr-2" /> Generer Beskrivelse ‚ú®
                </>
              )}
            </button>
          </div>

          <div>
            <label htmlFor="participants" className="block text-gray-700 font-medium mb-1">
              Antal deltagere (ca.)
            </label>
            <input
              type="number"
              id="participants"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-transparent"
              placeholder="F.eks. 50"
              value={participants}
              onChange={(e) => setParticipants(e.target.value)}
            />
          </div>

          <div>
            <label htmlFor="imageUpload" className="block text-gray-700 font-medium mb-1">
              Upload billede til festen
            </label>
            <input
              type="file"
              id="imageUpload"
              accept="image/*"
              className="w-full px-4 py-2 border border-gray-300 rounded-lg file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-purple-50 file:text-purple-700 hover:file:bg-purple-100"
              onChange={handleImageUpload}
            />
            {imagePreview && (
              <div className="mt-4">
                <img src={imagePreview} alt="Billedforh√•ndsvisning" className="w-full h-40 object-cover rounded-lg shadow-md" />
              </div>
            )}
          </div>

          <button
            type="submit"
            className="w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white py-3 rounded-lg font-bold text-lg hover:from-purple-700 hover:to-pink-700 transition-all duration-300 shadow-md flex items-center justify-center"
          >
            <PlusCircle size={20} className="inline-block mr-2" /> Opret festen
          </button>
        </form>
      </div>
    </div>
  );
};


const App = () => {
  const [currentPage, setCurrentPage] = useState('login'); // 'login', 'register', 'profile', 'feed', 'map', 'createParty'
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  const handleLoginSuccess = () => {
    setIsLoggedIn(true);
    setCurrentPage('feed'); // G√• til feed efter login
  };

  const handleRegisterClick = () => {
    setCurrentPage('register');
  };

  const handleBackToLogin = () => {
    setCurrentPage('login');
  };

  const handleCreatePartySuccess = () => {
    setCurrentPage('map'); // G√• til kortet efter festoprettelse
  };

  useEffect(() => {
    // S√¶t body baggrundsfarve
    document.body.style.backgroundColor = '#f0f2f5'; // En lys gr√• baggrund
    document.body.style.fontFamily = 'Inter, sans-serif'; // S√¶t Inter font
    return () => {
      document.body.style.backgroundColor = ''; // Ryd op ved unmount
      document.body.style.fontFamily = '';
    };
  }, []);

  return (
    <div className="min-h-screen flex flex-col font-inter">
      {isLoggedIn && <Header onNavigate={setCurrentPage} />} {/* Header vises kun n√•r logget ind */}

      <main className="flex-grow">
        {currentPage === 'login' && (
          <LoginPage
            onLoginSuccess={handleLoginSuccess}
            onRegisterClick={handleRegisterClick}
            onForgotPassword={() => console.log('Funktion til glemt adgangskode er ikke implementeret.')} // Erstat med modal senere
          />
        )}
        {currentPage === 'register' && <RegisterPage onBackToLogin={handleBackToLogin} />}

        {isLoggedIn && (
          <>
            {currentPage === 'profile' && <ProfilePage user={dummyUser} onEditProfile={() => console.log('Rediger profil funktion er ikke implementeret.')} />}
            {currentPage === 'feed' && <FeedPage onCreatePost={() => console.log('Opret opslag funktion er ikke implementeret.')} />}
            {currentPage === 'map' && <MapPage />}
            {currentPage === 'createParty' && <CreatePartyPage onCreatePartySuccess={handleCreatePartySuccess} />}
          </>
        )}
      </main>

      {isLoggedIn && <Navigation onNavigate={setCurrentPage} currentPage={currentPage} />} {/* Navigation vises kun n√•r logget ind */}
    </div>
  );
};

export default App;